{"version":3,"file":"client.svelte.CPLukl4k.js","sources":["../../node_modules/.pnpm/svelte@5.37.3/node_modules/svelte/src/internal/client/dom/blocks/snippet.js","../../node_modules/.pnpm/@astrojs+svelte@7.1.0_@types+node@24.2.0_astro@5.12.8_@types+node@24.2.0_jiti@1.21.7_li_85edce184c0af5a872db12b189c490db/node_modules/@astrojs/svelte/dist/client.svelte.js"],"sourcesContent":["/** @import { Snippet } from 'svelte' */\n/** @import { Effect, TemplateNode } from '#client' */\n/** @import { Getters } from '#shared' */\nimport { EFFECT_TRANSPARENT, ELEMENT_NODE } from '#client/constants';\nimport { branch, block, destroy_effect, teardown } from '../../reactivity/effects.js';\nimport {\n\tdev_current_component_function,\n\tset_dev_current_component_function\n} from '../../context.js';\nimport { hydrate_next, hydrate_node, hydrating } from '../hydration.js';\nimport { create_fragment_from_html } from '../reconciler.js';\nimport { assign_nodes } from '../template.js';\nimport * as w from '../../warnings.js';\nimport * as e from '../../errors.js';\nimport { DEV } from 'esm-env';\nimport { get_first_child, get_next_sibling } from '../operations.js';\nimport { noop } from '../../../shared/utils.js';\nimport { prevent_snippet_stringification } from '../../../shared/validate.js';\n\n/**\n * @template {(node: TemplateNode, ...args: any[]) => void} SnippetFn\n * @param {TemplateNode} node\n * @param {() => SnippetFn | null | undefined} get_snippet\n * @param {(() => any)[]} args\n * @returns {void}\n */\nexport function snippet(node, get_snippet, ...args) {\n\tvar anchor = node;\n\n\t/** @type {SnippetFn | null | undefined} */\n\t// @ts-ignore\n\tvar snippet = noop;\n\n\t/** @type {Effect | null} */\n\tvar snippet_effect;\n\n\tblock(() => {\n\t\tif (snippet === (snippet = get_snippet())) return;\n\n\t\tif (snippet_effect) {\n\t\t\tdestroy_effect(snippet_effect);\n\t\t\tsnippet_effect = null;\n\t\t}\n\n\t\tif (DEV && snippet == null) {\n\t\t\te.invalid_snippet();\n\t\t}\n\n\t\tsnippet_effect = branch(() => /** @type {SnippetFn} */ (snippet)(anchor, ...args));\n\t}, EFFECT_TRANSPARENT);\n\n\tif (hydrating) {\n\t\tanchor = hydrate_node;\n\t}\n}\n\n/**\n * In development, wrap the snippet function so that it passes validation, and so that the\n * correct component context is set for ownership checks\n * @param {any} component\n * @param {(node: TemplateNode, ...args: any[]) => void} fn\n */\nexport function wrap_snippet(component, fn) {\n\tconst snippet = (/** @type {TemplateNode} */ node, /** @type {any[]} */ ...args) => {\n\t\tvar previous_component_function = dev_current_component_function;\n\t\tset_dev_current_component_function(component);\n\n\t\ttry {\n\t\t\treturn fn(node, ...args);\n\t\t} finally {\n\t\t\tset_dev_current_component_function(previous_component_function);\n\t\t}\n\t};\n\n\tprevent_snippet_stringification(snippet);\n\n\treturn snippet;\n}\n\n/**\n * Create a snippet programmatically\n * @template {unknown[]} Params\n * @param {(...params: Getters<Params>) => {\n *   render: () => string\n *   setup?: (element: Element) => void | (() => void)\n * }} fn\n * @returns {Snippet<Params>}\n */\nexport function createRawSnippet(fn) {\n\t// @ts-expect-error the types are a lie\n\treturn (/** @type {TemplateNode} */ anchor, /** @type {Getters<Params>} */ ...params) => {\n\t\tvar snippet = fn(...params);\n\n\t\t/** @type {Element} */\n\t\tvar element;\n\n\t\tif (hydrating) {\n\t\t\telement = /** @type {Element} */ (hydrate_node);\n\t\t\thydrate_next();\n\t\t} else {\n\t\t\tvar html = snippet.render().trim();\n\t\t\tvar fragment = create_fragment_from_html(html);\n\t\t\telement = /** @type {Element} */ (get_first_child(fragment));\n\n\t\t\tif (DEV && (get_next_sibling(element) !== null || element.nodeType !== ELEMENT_NODE)) {\n\t\t\t\tw.invalid_raw_snippet_render();\n\t\t\t}\n\n\t\t\tanchor.before(element);\n\t\t}\n\n\t\tconst result = snippet.setup?.(element);\n\t\tassign_nodes(element, element);\n\n\t\tif (typeof result === 'function') {\n\t\t\tteardown(result);\n\t\t}\n\t};\n}\n","import { createRawSnippet, hydrate, mount, unmount } from \"svelte\";\nconst existingApplications = /* @__PURE__ */ new WeakMap();\nvar client_svelte_default = (element) => {\n  return async (Component, props, slotted, { client }) => {\n    if (!element.hasAttribute(\"ssr\")) return;\n    let children = void 0;\n    let _$$slots = void 0;\n    let renderFns = {};\n    for (const [key, value] of Object.entries(slotted)) {\n      _$$slots ??= {};\n      if (key === \"default\") {\n        _$$slots.default = true;\n        children = createRawSnippet(() => ({\n          render: () => `<astro-slot>${value}</astro-slot>`\n        }));\n      } else {\n        _$$slots[key] = createRawSnippet(() => ({\n          render: () => `<astro-slot name=\"${key}\">${value}</astro-slot>`\n        }));\n      }\n      if (key === \"default\") {\n        renderFns.children = createRawSnippet(() => ({\n          render: () => `<astro-slot>${value}</astro-slot>`\n        }));\n      } else {\n        renderFns[key] = createRawSnippet(() => ({\n          render: () => `<astro-slot name=\"${key}\">${value}</astro-slot>`\n        }));\n      }\n    }\n    const resolvedProps = {\n      ...props,\n      children,\n      $$slots: _$$slots,\n      ...renderFns\n    };\n    if (existingApplications.has(element)) {\n      existingApplications.get(element).setProps(resolvedProps);\n    } else {\n      const component = createComponent(Component, element, resolvedProps, client !== \"only\");\n      existingApplications.set(element, component);\n      element.addEventListener(\"astro:unmount\", () => component.destroy(), { once: true });\n    }\n  };\n};\nfunction createComponent(Component, target, props, shouldHydrate) {\n  let propsState = $state(props);\n  const bootstrap = shouldHydrate ? hydrate : mount;\n  if (!shouldHydrate) {\n    target.innerHTML = \"\";\n  }\n  const component = bootstrap(Component, { target, props: propsState });\n  return {\n    setProps(newProps) {\n      Object.assign(propsState, newProps);\n      for (const key in propsState) {\n        if (!(key in newProps)) {\n          delete propsState[key];\n        }\n      }\n    },\n    destroy() {\n      unmount(component);\n    }\n  };\n}\nexport {\n  client_svelte_default as default\n};\n"],"names":["createRawSnippet","fn","anchor","params","snippet","element","hydrating","hydrate_node","hydrate_next","html","fragment","create_fragment_from_html","get_first_child","result","assign_nodes","teardown","existingApplications","client_svelte_default","Component","props","slotted","client","children","_$$slots","renderFns","key","value","resolvedProps","component","createComponent","target","shouldHydrate","propsState","bootstrap","hydrate","mount","newProps","unmount"],"mappings":"mJAwFO,SAASA,EAAiBC,EAAI,CAEpC,MAAO,CAA6BC,KAA0CC,IAAW,CACxF,IAAIC,EAAUH,EAAG,GAAGE,CAAM,EAGtBE,EAEJ,GAAIC,EACHD,EAAkCE,EAClCC,EAAY,MACN,CACN,IAAIC,EAAOL,EAAQ,OAAM,EAAG,KAAI,EAC5BM,EAAWC,EAA0BF,CAAI,EAC7CJ,EAAkCO,EAAgBF,CAAQ,EAM1DR,EAAO,OAAOG,CAAO,CACtB,CAEA,MAAMQ,EAAST,EAAQ,QAAQC,CAAO,EACtCS,EAAaT,EAASA,CAAO,EAEzB,OAAOQ,GAAW,YACrBE,EAASF,CAAM,CAEjB,CACD,CCrHM,MAAAG,MAA2C,YAC7CC,EAAyBZ,GACb,MAAAa,EAAWC,EAAOC,EAAO,CAAI,OAAAC,CAAM,IAAO,KACjDhB,EAAQ,aAAa,KAAK,EAAA,OAC3B,IAAAiB,EACAC,EACAC,EAAS,CAAA,YACDC,EAAKC,CAAK,IAAK,OAAO,QAAQN,CAAO,EAC/CG,IAAQ,CAAA,EACJE,IAAQ,WACVF,EAAS,QAAU,GACnBD,EAAWtB,EAAgB,KAAA,CACzB,0BAA6B0B,CAAK,eAAA,EAAA,GAGpCH,EAASE,CAAG,EAAIzB,EAAgB,KAAA,CAC9B,OAAM,IAAA,qBAA6ByB,CAAG,KAAKC,CAAK,mBAGhDD,IAAQ,UACVD,EAAU,SAAWxB,EAAgB,KAAA,CACnC,0BAA6B0B,CAAK,eAAA,EAAA,EAGpCF,EAAUC,CAAG,EAAIzB,EAAgB,KAAA,CAC/B,OAAM,IAAA,qBAA6ByB,CAAG,KAAKC,CAAK,yBAIhDC,EAAa,CAAA,GACdR,EACH,SAAAG,EACA,QAASC,EAAQ,GACdC,CAAS,EAEV,GAAAR,EAAqB,IAAIX,CAAO,EAClCW,EAAqB,IAAIX,CAAO,EAAE,SAASsB,CAAa,MACnD,OACCC,EAAYC,EAAgBX,EAAWb,EAASsB,EAAeN,IAAW,MAAM,EACtFL,EAAqB,IAAIX,EAASuB,CAAS,EAC3CvB,EAAQ,iBAAiB,gBAAe,IAAQuB,EAAU,UAAO,CAAM,KAAM,GAAI,CACnF,CACF,WAEOC,EAAgBX,EAAWY,EAAQX,EAAOY,EAAe,CAC5D,IAAAC,IAAoBb,CAAK,EACvB,MAAAc,EAAYF,EAAgBG,EAAUC,EACvCJ,IACHD,EAAO,UAAY,UAEfF,EAAYK,EAAUf,GAAa,OAAAY,EAAQ,MAAOE,EAAU,SAEhE,SAASI,EAAU,CACjB,OAAO,OAAOJ,EAAYI,CAAQ,YACvBX,KAAOO,EACVP,KAAOW,GACJ,OAAAJ,EAAWP,CAAG,CAG3B,EACA,SAAU,CACRY,EAAQT,CAAS,CACnB,EAEJ","x_google_ignoreList":[0,1]}