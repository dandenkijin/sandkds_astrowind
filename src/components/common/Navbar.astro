---
import { getPermalink } from '~/utils/permalinks';
import Icon from 'astro-icon';
import ToggleTheme from './ToggleTheme.astro';

interface NavItem {
  text: string;
  href: string;
  children?: NavItem[];
}

const { links = [] } = Astro.props as { links: NavItem[] };
const currentPath = new URL(Astro.url).pathname;

// Mobile menu state
let isOpen = false;

const toggleMenu = () => {
  isOpen = !isOpen;
  document.getElementById('mobile-menu')?.classList.toggle('translate-x-0');
  document.getElementById('mobile-menu')?.classList.toggle('translate-x-full');
  document.getElementById('mobile-menu-overlay')?.classList.toggle('opacity-0');
  document.getElementById('mobile-menu-overlay')?.classList.toggle('opacity-100');
  document.getElementById('mobile-menu-overlay')?.classList.toggle('invisible');
  document.body.classList.toggle('overflow-hidden');
};
---

<header class="bg-white dark:bg-gray-900 shadow-sm sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between h-16">
      <!-- Logo -->
      <div class="flex-shrink-0 flex items-center">
        <a href={getPermalink('/')} class="text-xl font-bold text-gray-900 dark:text-white">
          SandKDS
        </a>
      </div>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-8">
        {links.map((item) => (
          <div class="relative group">
            <a
              href={item.href}
              class={`px-3 py-2 text-sm font-medium ${
                currentPath === item.href
                  ? 'text-blue-600 dark:text-blue-400'
                  : 'text-gray-700 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white'
              }`}
            >
              {item.text}
              {item.children && (
                <Icon name="tabler:chevron-down" class="inline-block w-4 h-4 ml-1" />
              )}
            </a>
            {item.children && (
              <div class="absolute left-0 mt-2 w-56 rounded-md shadow-lg bg-white dark:bg-gray-800 ring-1 ring-black ring-opacity-5 py-1 opacity-0 invisible group-hover:opacity-100 group-hover:visible transition-all duration-200">
                {item.children.map((child) => (
                  <a
                    href={child.href}
                    class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 dark:text-gray-300 dark:hover:bg-gray-700"
                  >
                    {child.text}
                  </a>
                ))}
              </div>
            )}
          </div>
        ))}
      </nav>

      <!-- Right side items -->
      <div class="flex items-center space-x-4">
        <ToggleTheme />
        
        <!-- Mobile menu button -->
        <button
          type="button"
          class="md:hidden inline-flex items-center justify-center p-2 rounded-md text-gray-700 dark:text-gray-200 hover:text-gray-900 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none"
          aria-controls="mobile-menu"
          aria-expanded="false"
          on:click={toggleMenu}
        >
          <span class="sr-only">Open main menu</span>
          <Icon name="tabler:menu-2" class="block h-6 w-6" />
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu, show/hide based on menu state -->
  <div class="fixed inset-0 z-40 overflow-y-auto md:hidden">
    <!-- Overlay -->
    <div 
      id="mobile-menu-overlay"
      class="fixed inset-0 bg-black bg-opacity-50 transition-opacity duration-300 opacity-0 invisible"
      on:click={toggleMenu}
    ></div>

    <!-- Menu panel -->
    <div 
      id="mobile-menu"
      class="fixed inset-y-0 right-0 max-w-xs w-full bg-white dark:bg-gray-900 shadow-xl transform transition-transform duration-300 translate-x-full"
    >
      <div class="h-full overflow-y-auto">
        <div class="px-4 pt-5 pb-6">
          <div class="flex items-center justify-between">
            <div class="text-xl font-bold text-gray-900 dark:text-white">Menu</div>
            <button
              type="button"
              class="rounded-md text-gray-400 hover:text-gray-500 focus:outline-none"
              on:click={toggleMenu}
            >
              <span class="sr-only">Close menu</span>
              <Icon name="tabler:x" class="h-6 w-6" />
            </button>
          </div>
          
          <nav class="mt-6">
            <div class="space-y-1">
              {links.map((item) => (
                <div class="space-y-1">
                  <a
                    href={item.href}
                    class="block px-3 py-2 rounded-md text-base font-medium text-gray-700 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-300 dark:hover:bg-gray-800"
                  >
                    {item.text}
                  </a>
                  {item.children && (
                    <div class="pl-4 mt-1 space-y-1">
                      {item.children.map((child) => (
                        <a
                          href={child.href}
                          class="block px-3 py-2 rounded-md text-sm text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-400 dark:hover:bg-gray-800"
                        >
                          {child.text}
                        </a>
                      ))}
                    </div>
                  )}
                </div>
              ))}
            </div>
          </nav>
        </div>
      </div>
    </div>
  </div>
</header>

<script>
// Close mobile menu when clicking on a link
const mobileLinks = document.querySelectorAll('#mobile-menu a');
mobileLinks.forEach(link => {
  link.addEventListener('click', () => {
    const mobileMenu = document.getElementById('mobile-menu');
    const overlay = document.getElementById('mobile-menu-overlay');
    
    if (mobileMenu && overlay) {
      mobileMenu.classList.remove('translate-x-0');
      mobileMenu.classList.add('translate-x-full');
      overlay.classList.remove('opacity-100');
      overlay.classList.add('opacity-0', 'invisible');
      document.body.classList.remove('overflow-hidden');
    }
  });
});
</script>
