---
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Button from '~/components/ui/Button.astro';
// import Image from '~/components/common/Image.astro';
import type { Testimonials as Props } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  testimonials = [],
  callToAction,

  id,
  isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props;
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-6xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />

  <div class="max-w-3xl mx-auto px-4 mb-2">
    {
      testimonials &&
        testimonials.map(({ title, testimonial, name, job, image }) => (
          <div class="text-center mb-8">
            <div class="relative inline-block group">
              {/* Floating effect container */}
              <div class="absolute inset-0 transform transition-transform duration-1000 group-hover:translate-y-[-8px] group-hover:translate-x-0 group-hover:scale-[1.02]">
                <div class="absolute inset-0 bg-white/5 dark:bg-white/5 rounded-full blur-lg opacity-0 group-hover:opacity-100 transition-opacity duration-700"></div>
              </div>
              
              {/* Testimonial content */}
              <div class="relative">
                {/* Optional decorative quote icon */}
                <div class="text-6xl text-gray-200 dark:text-gray-700 mb-2">"</div>
                
                {testimonial && (
                  <blockquote class="text-xl md:text-2xl font-light text-gray-700 dark:text-gray-300 leading-relaxed mb-4">
                    {testimonial}
                  </blockquote>
                )}
                
                <div class="mt-8">
                  {name && <p class="text-lg font-medium text-gray-900 dark:text-white">{name}</p>}
                  {job && <p class="text-sm text-gray-500 dark:text-gray-400 mt-1">{job}</p>}
                </div>
              </div>
            </div>
          </div>
        ))
    }
  </div>
  {
    callToAction && (
      <div class="flex justify-center mx-auto w-fit mt-8 md:mt-12 font-medium">
        <Button {...callToAction} />
      </div>
    )
  }
</WidgetWrapper>
