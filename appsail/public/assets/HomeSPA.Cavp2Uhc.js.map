{"version":3,"mappings":"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","names":["THREE","canvasContainer","$.mutable_source","scene","camera","renderer","particles","clock","mouse","target","windowHalf","isLightMode","rafId","isHovered","particlePositions","particleSpeeds","particleSizes","PARTICLE_COUNT","dpr","cores","perfFactor","root","mqInit","handleMqInit","e","onMount","$.get","applyBackground","light","overlayCanvas","ctx","cx","cy","r","grad","overlayTexture","initialW","initialH","geometry","cloudCenters","particlesPerCloud","i","cloudIndex","center","radius","theta","phi","x","z","particleMaterial","circleCanvas","ctx2","g","map","colors","PASTEL_PALETTE","base","hsl","adjusted","ambientLight","onMouseMove","event","resizeT","handleResize","nowLight","colorsAttr","arr","REPALETTE","pm","animate","time","positions","i3","p","noiseX","noiseY","noiseZ","targetX","targetY","targetZ","maxDistance","dx","dy","dist","falloff","force","moveX","moveY","boundsX","boundsY","pulse","posAttr","materials","material","$.bind_this","div_1","$$value","$.set","$.event","a","a_1"],"ignoreList":[],"sources":["../../src/components/home-spa/HomeSPA.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte';\n\n  // Import Three.js types only (module is loaded dynamically at runtime)\n  import type * as ThreeType from 'three';\n  import type {\n    Scene, WebGLRenderer, PerspectiveCamera,\n    Points as PointsType, BufferGeometry, Material,\n    Clock, Vector2\n  } from 'three';\n\n  // Dynamic module holder\n  let THREE: typeof ThreeType | null = null;\n\n  // Core refs\n  let canvasContainer: HTMLDivElement;\n\n  // Scene state\n  let scene: Scene | null = null;\n  let camera: PerspectiveCamera | null = null;\n  let renderer: WebGLRenderer | null = null;\n  let particles: PointsType<BufferGeometry, Material | Material[]> | null = null;\n\n  // Helpers\n  let clock: Clock | null = null;\n  let mouse: Vector2 | null = null;\n  let target: Vector2 | null = null;\n  let windowHalf: Vector2 | null = null;\n\n  // Theme flag\n  let isLightMode = false;\n\n  // RAF id\n  let rafId: number | null = null;\n\n  // UI state\n  let isHovered = false;\n\n  // Animation state\n  let lastTime = 0;\n  \n  // Particle system\n  let particlePositions: Float32Array;\n  let particleSpeeds: Array<{\n    x: number;\n    y: number;\n    z: number;\n    baseX: number;\n    baseY: number;\n    baseZ: number;\n    angle: number;\n    speed: number;\n  }> = [];\n  let particleSizes: Float32Array;\n  \n  // Initialize particle count based on device capabilities\n  let PARTICLE_COUNT = 50;\n  if (typeof window !== 'undefined') {\n    const dpr = Math.min(window.devicePixelRatio || 1, 4);\n    const cores = (navigator as Navigator & { hardwareConcurrency?: number }).hardwareConcurrency ?? 4;\n    const perfFactor = Math.min(1.1, Math.max(0.6, (cores / 8) * (1.0 / dpr)));\n    PARTICLE_COUNT = Math.round(PARTICLE_COUNT * perfFactor);\n  }\n\n  // Track current theme mode, prefer site theme class over media query\n  if (typeof window !== 'undefined') {\n    const root = document.documentElement;\n    // If site uses class-based dark mode (Tailwind 'dark' class), prefer that\n    if (root.classList.contains('dark')) {\n      isLightMode = false;\n    } else if (root.classList.contains('light')) {\n      isLightMode = true;\n    } else {\n      // Fallback to media query\n      isLightMode = window.matchMedia('(prefers-color-scheme: light)').matches;\n    }\n    // React to theme toggles at runtime\n    const mqInit = window.matchMedia('(prefers-color-scheme: light)');\n    const handleMqInit = (e: MediaQueryListEvent) => {\n      // Only apply if no explicit class is set on root\n      if (!root.classList.contains('dark') && !root.classList.contains('light')) {\n        isLightMode = e.matches;\n      }\n    };\n    if (mqInit.addEventListener) mqInit.addEventListener('change', handleMqInit);\n    else if ((mqInit as unknown as { addListener?: (cb: (e: MediaQueryListEvent) => void) => void }).addListener) {\n      (mqInit as unknown as { addListener: (cb: (e: MediaQueryListEvent) => void) => void }).addListener(handleMqInit);\n    }\n  }\n  \n  // Helper type for HSL to avoid any\n  type HSL = { h: number; s: number; l: number };\n\n  // Initialize Three.js scene with particle system\n  onMount(() => {\n    (async () => {\n      if (typeof window === 'undefined') return;\n\n      if (!THREE) {\n        THREE = await import('three');\n      }\n      if (!canvasContainer || !THREE) return;\n\n      if (canvasContainer?.firstChild) {\n        try {\n          while (canvasContainer.firstChild) canvasContainer.removeChild(canvasContainer.firstChild);\n        } catch {}\n      }\n\n      scene = new (THREE as typeof ThreeType).Scene();\n\n      function applyBackground(light: boolean) {\n        scene.background = new THREE.Color('#f8fafc');\n        const overlayCanvas = document.createElement('canvas');\n        overlayCanvas.width = 512;\n        overlayCanvas.height = 512;\n        const ctx = overlayCanvas.getContext('2d');\n        if (ctx) {\n          const cx = overlayCanvas.width / 2;\n          const cy = overlayCanvas.height / 2;\n          const r = Math.max(cx, cy);\n          const grad = ctx.createRadialGradient(cx, cy, 0, cx, cy, r);\n          grad.addColorStop(0.0, 'rgba(255, 192, 203, 0.50)');\n          grad.addColorStop(0.45, 'rgba(245, 182, 204, 0.34)');\n          grad.addColorStop(1.0, 'rgba(255, 192, 203, 0.06)');\n          ctx.fillStyle = grad;\n          ctx.fillRect(0, 0, overlayCanvas.width, overlayCanvas.height);\n          const overlayTexture = new THREE.CanvasTexture(overlayCanvas);\n          overlayTexture.wrapS = THREE.ClampToEdgeWrapping;\n          overlayTexture.wrapT = THREE.ClampToEdgeWrapping;\n          overlayTexture.colorSpace = THREE.SRGBColorSpace;\n          scene.background = overlayTexture;\n        }\n      }\n\n      applyBackground(isLightMode);\n\n      camera = new (THREE as typeof ThreeType).PerspectiveCamera(70, window.innerWidth / window.innerHeight, 0.1, 1000);\n      camera.position.z = 32;\n\n      renderer = new (THREE as typeof ThreeType).WebGLRenderer({\n        antialias: false,\n        alpha: true,\n        powerPreference: 'low-power',\n        preserveDrawingBuffer: false,\n      });\n      const maxDpr = 1.5;\n      renderer.setPixelRatio(Math.min(window.devicePixelRatio || 1, maxDpr));\n      const initialW = Math.floor(window.innerWidth * 0.75);\n      const initialH = Math.floor(window.innerHeight * 0.75);\n      renderer.setSize(initialW, initialH, false);\n      renderer.outputEncoding = THREE.sRGBEncoding;\n      canvasContainer.appendChild(renderer.domElement);\n      requestAnimationFrame(() => {\n        if (renderer?.domElement && typeof renderer.setSize === 'function') {\n          renderer.setSize(window.innerWidth, window.innerHeight, false);\n        }\n      });\n\n      const geometry = new (THREE as typeof ThreeType).BufferGeometry();\n      geometry.setDrawRange(0, PARTICLE_COUNT);\n\n      particlePositions = new Float32Array(PARTICLE_COUNT * 3);\n      particleSizes = new Float32Array(PARTICLE_COUNT);\n\n      const cloudCenters = [\n        { x: 0, y: 0, z: 0 },\n        { x: 10, y: 3.5, z: -8 },\n        { x: -9, y: -3, z: 6 },\n        { x: 6, y: -4, z: -6 },\n      ];\n      const particlesPerCloud = Math.floor(PARTICLE_COUNT / cloudCenters.length);\n\n      for (let i = 0; i < PARTICLE_COUNT; i++) {\n        const cloudIndex = Math.min(Math.floor(i / particlesPerCloud), cloudCenters.length - 1);\n        const center = cloudCenters[cloudIndex];\n        const radius = 7 + Math.random() * 6;\n        const theta = Math.random() * Math.PI * 2;\n        const phi = Math.acos(2 * Math.random() - 1);\n        const r = radius * (Math.random() ** 0.9);\n        const x = center.x + r * Math.sin(phi) * Math.cos(theta);\n        const y = center.y + r * Math.sin(phi) * Math.sin(theta) * 0.8;\n        const z = center.z + r * Math.cos(phi);\n        particlePositions[i * 3] = x;\n        particlePositions[i * 3 + 1] = y;\n        particlePositions[i * 3 + 2] = z;\n        particleSizes[i] = 1.8 + Math.random() * 2.8;\n        particleSpeeds.push({\n          x: (Math.random() - 0.5) * 0.03,\n          y: (Math.random() - 0.5) * 0.015,\n          z: (Math.random() - 0.5) * 0.03,\n          baseX: x,\n          baseY: y,\n          baseZ: z,\n          angle: Math.random() * Math.PI * 2,\n          speed: 0.0015 + Math.random() * 0.0045,\n        });\n      }\n\n      geometry.setAttribute('position', new (THREE as typeof ThreeType).BufferAttribute(particlePositions, 3));\n      geometry.setAttribute('size', new (THREE as typeof ThreeType).BufferAttribute(particleSizes, 1));\n\n      const particleMaterial = new (THREE as typeof ThreeType).PointsMaterial({\n        size: 1.6,\n        color: 0xffffff,\n        transparent: true,\n        opacity: 1.0,\n        blending: THREE.NormalBlending,\n        sizeAttenuation: true,\n        vertexColors: true,\n        alphaTest: 0.01,\n        depthWrite: false,\n      });\n      const circleCanvas = document.createElement('canvas');\n      circleCanvas.width = 64;\n      circleCanvas.height = 64;\n      const ctx2 = circleCanvas.getContext('2d');\n      if (ctx2) {\n        const g = ctx2.createRadialGradient(32, 32, 0, 32, 32, 32);\n        g.addColorStop(0, 'rgba(255,255,255,1)');\n        g.addColorStop(0.7, 'rgba(255,255,255,0.9)');\n        g.addColorStop(1, 'rgba(255,255,255,0)');\n        ctx2.fillStyle = g;\n        ctx2.beginPath();\n        ctx2.arc(32, 32, 32, 0, Math.PI * 2);\n        ctx2.fill();\n        const map = new (THREE as typeof ThreeType).CanvasTexture(circleCanvas);\n        map.colorSpace = (THREE as typeof ThreeType).SRGBColorSpace;\n        map.anisotropy = 4;\n        particleMaterial.alphaMap = map;\n        particleMaterial.needsUpdate = true;\n      }\n\n      const colors = new Float32Array(PARTICLE_COUNT * 3);\n      const PASTEL_PALETTE = [\n        new (THREE as typeof ThreeType).Color('#f472b6'),\n        new (THREE as typeof ThreeType).Color('#fb7185'),\n        new (THREE as typeof ThreeType).Color('#a78bfa'),\n        new (THREE as typeof ThreeType).Color('#60a5fa'),\n        new (THREE as typeof ThreeType).Color('#34d399'),\n        new (THREE as typeof ThreeType).Color('#fbbf24'),\n        new (THREE as typeof ThreeType).Color('#f59e0b'),\n      ];\n      for (let i = 0; i < PARTICLE_COUNT; i++) {\n        const base = PASTEL_PALETTE[Math.floor(Math.random() * PASTEL_PALETTE.length)].clone();\n        const hsl: HSL = { h: 0, s: 0, l: 0 };\n        (base as unknown as { getHSL: (o: HSL) => HSL }).getHSL(hsl);\n        const adjusted = base.clone().setHSL(\n          hsl.h,\n          Math.min(1, hsl.s * 1.0),\n          Math.min(0.75, Math.max(0.5, hsl.l))\n        );\n        colors[i * 3] = adjusted.r;\n        colors[i * 3 + 1] = adjusted.g;\n        colors[i * 3 + 2] = adjusted.b;\n      }\n      geometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n\n      particles = new THREE.Points(geometry, particleMaterial);\n      scene.add(particles);\n\n      const ambientLight = new THREE.AmbientLight(0xffffff, 0.05);\n      scene.add(ambientLight);\n\n      mouse = new THREE.Vector2();\n      target = new THREE.Vector2();\n      windowHalf = new THREE.Vector2(window.innerWidth / 2, window.innerHeight / 2);\n\n      const onMouseMove = (event: MouseEvent) => {\n        if (!mouse || !windowHalf) return;\n        mouse.x = (event.clientX - windowHalf.x) * 0.001;\n        mouse.y = (event.clientY - windowHalf.y) * 0.001;\n      };\n      window.addEventListener('mousemove', onMouseMove, false);\n\n      clock = new THREE.Clock();\n      let resizeT: number | undefined;\n      const handleResize = () => {\n        if (!camera || !renderer || !windowHalf) return;\n        if (resizeT) cancelAnimationFrame(resizeT);\n        resizeT = requestAnimationFrame(() => {\n          camera.aspect = window.innerWidth / window.innerHeight;\n          camera.updateProjectionMatrix();\n          renderer.setSize(window.innerWidth, window.innerHeight, false);\n          windowHalf.set(window.innerWidth / 2, window.innerHeight / 2);\n        });\n      };\n      window.addEventListener('resize', handleResize, false);\n\n      const root = document.documentElement;\n      const mo = new MutationObserver(() => {\n        const nowLight = !root.classList.contains('dark');\n        if (nowLight !== isLightMode) {\n          isLightMode = nowLight;\n          applyBackground(isLightMode);\n          (particles!.material as THREE.PointsMaterial).color = new THREE.Color(0x111111);\n          (particles!.material as THREE.PointsMaterial).opacity = 0.9;\n          const colorsAttr = particles!.geometry.getAttribute('color') as THREE.BufferAttribute;\n          const arr = colorsAttr.array as Float32Array;\n          const REPALETTE = [\n            new THREE.Color('#f472b6'),\n            new THREE.Color('#fb7185'),\n            new THREE.Color('#a78bfa'),\n            new THREE.Color('#60a5fa'),\n            new THREE.Color('#34d399'),\n            new THREE.Color('#fbbf24'),\n            new THREE.Color('#f59e0b'),\n          ];\n          for (let i = 0; i < PARTICLE_COUNT; i++) {\n            const base = REPALETTE[Math.floor(Math.random() * REPALETTE.length)].clone();\n            const hsl: HSL = { h: 0, s: 0, l: 0 };\n            (base as unknown as { getHSL: (o: HSL) => HSL }).getHSL(hsl);\n            const adjusted = base.clone().setHSL(\n              hsl.h,\n              Math.min(1, hsl.s),\n              Math.min(0.75, Math.max(0.5, hsl.l))\n            );\n            arr[i * 3] = adjusted.r;\n            arr[i * 3 + 1] = adjusted.g;\n            arr[i * 3 + 2] = adjusted.b;\n          }\n          colorsAttr.needsUpdate = true;\n          const pm = particles!.material as THREE.PointsMaterial;\n          pm.color = new THREE.Color(0xffffff);\n          pm.blending = THREE.NormalBlending;\n          pm.opacity = 1.0;\n          pm.needsUpdate = true;\n        }\n      });\n      mo.observe(root, { attributes: true, attributeFilter: ['class'] });\n\n      function animate() {\n        if (!clock || !renderer || !scene || !camera || !particles || !mouse || !target || !windowHalf) return;\n        rafId = requestAnimationFrame(animate);\n        const time = clock.getElapsedTime();\n        const delta = time - lastTime;\n        lastTime = time;\n        const positions = particles.geometry.attributes.position.array as Float32Array;\n        for (let i = 0; i < PARTICLE_COUNT; i++) {\n          const i3 = i * 3;\n          const p = particleSpeeds[i];\n          p.angle += p.speed;\n          const noiseX = Math.sin(time * 0.42 + p.baseX * 0.15) * 0.38;\n          const noiseY = Math.cos(time * 0.36 + p.baseY * 0.15) * 0.20;\n          const noiseZ = Math.sin(time * 0.48 + p.baseZ * 0.15) * 0.38;\n          const targetX = p.baseX + noiseX;\n          const targetY = p.baseY + noiseY;\n          const targetZ = p.baseZ + noiseZ;\n          positions[i3] += (targetX - positions[i3]) * 0.03;\n          positions[i3 + 1] += (targetY - positions[i3 + 1]) * 0.03;\n          positions[i3 + 2] += (targetZ - positions[i3 + 2]) * 0.03;\n          const maxDistance = 30; // Max distance particles can be pushed\n    const dx = mouse.x * 25 - positions[i3];\n    const dy = -mouse.y * 25 - positions[i3 + 1];\n    const dist = Math.sqrt(dx * dx + dy * dy) + 0.0001;\n    if (dist < maxDistance) {\n      const falloff = 1 - dist / maxDistance;\n      const force = 0.7 * falloff * falloff;\n      const moveX = (dx / dist) * force;\n      const moveY = (dy / dist) * force;\n      \n      // Apply movement\n      positions[i3] -= moveX;\n      positions[i3 + 1] -= moveY;\n      \n      // Keep particles within screen bounds (bounce)\n      const boundsX = windowHalf.x * 0.9;\n      const boundsY = windowHalf.y * 0.9;\n      \n      if (Math.abs(positions[i3]) > boundsX) {\n        positions[i3] = boundsX * Math.sign(positions[i3]);\n      }\n      if (Math.abs(positions[i3 + 1]) > boundsY) {\n        positions[i3 + 1] = boundsY * Math.sign(positions[i3 + 1]);\n      }\n    }\n          const pulse = Math.sin(time * 0.9 + i * 0.03) * 0.16 + 0.95;\n          particleSizes[i] = 2.6 * pulse;\n        }\n        const posAttr = particles.geometry.getAttribute('position');\n        posAttr.needsUpdate = true;\n        if (Math.floor(time * 6) % 6 === 0) {\n          particles.geometry.attributes.size.needsUpdate = true;\n          particles.geometry.attributes.color.needsUpdate = true;\n        }\n        particles.rotation.y = time * 0.03;\n        target.x = mouse.x * 5;\n        target.y = -mouse.y * 5;\n        camera.position.x += (target.x - camera.position.x) * 0.1;\n        camera.position.y += (target.y - camera.position.y) * 0.1;\n        camera.lookAt(scene.position);\n        renderer.render(scene, camera);\n      }\n      animate();\n\n      return () => {\n        window.removeEventListener('mousemove', onMouseMove);\n        window.removeEventListener('resize', handleResize);\n        if (resizeT) cancelAnimationFrame(resizeT);\n        if (rafId) cancelAnimationFrame(rafId);\n        if (renderer) {\n          renderer.dispose();\n          if (renderer.domElement && canvasContainer?.contains(renderer.domElement)) {\n            canvasContainer.removeChild(renderer.domElement);\n          }\n          renderer = null;\n        }\n        if (particles) {\n          const geometry = particles.geometry;\n          const materials = Array.isArray(particles.material) ? particles.material : [particles.material];\n          geometry.dispose();\n          for (const material of materials) material.dispose();\n          particles = null;\n        }\n        scene = null;\n        camera = null;\n        clock = null;\n        mouse = null;\n        target = null;\n        windowHalf = null;\n      };\n    })();\n  });\n  \n  // Function to create a simple particle system\n  function createParticleSystem(scene: ThreeType.Scene) {\n    // This function is no longer needed as we create particles in the main setup\n    // Keeping it as a placeholder in case we want to add more particle systems later\n  }\n</script>\n\n<!-- Only render the 3D scene on the client side -->\n<!-- No need for dynamic imports in the head, we'll handle it in the component -->\n\n<div class=\"home-spa-container\">\n  <div class=\"home-spa-canvas-container\" bind:this={canvasContainer}></div>\n  <div class=\"home-spa-content\">\n    <div class=\"home-spa-inner-content\">\n      <h1 class=\"home-spa-title responsive-title\">\n        Welcome to Snugs & Kisses Doula Services\n      </h1>\n      <p class=\"home-spa-subtitle\">\n        Your journey to personalized family services begins here.\n      </p>\n      \n      <div class=\"home-spa-button-container\">\n        <a href=\"/corporate\" class=\"home-spa-btn secondary\" \n           on:mouseenter={() => isHovered = true}\n           on:mouseleave={() => isHovered = false}>\n          Corporate Services\n        </a>\n        <a href=\"/client\" class=\"home-spa-btn primary\"\n           on:mouseenter={() => isHovered = true}\n           on:mouseleave={() => isHovered = false}>\n          Client Services\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<style lang=\"postcss\">\n  /* Scoped styles for this component */\n  .home-spa-container {\n    @apply relative w-full h-full min-h-[calc(100vh-64px)] pt-16 bg-white dark:bg-slate-900;\n    position: relative;\n    z-index: 1;\n  }\n\n  /* Preload gradient: visible immediately before WebGL initializes */\n  .home-spa-container::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    z-index: 0; /* behind content, above page bg */\n    pointer-events: none;\n    background:\n      radial-gradient(60% 60% at 50% 40%, rgba(255, 192, 203, 0.45), rgba(245, 182, 204, 0.25), rgba(255, 255, 255, 0.06)),\n      linear-gradient(180deg, rgba(255, 240, 245, 0.6) 0%, rgba(255, 255, 255, 0) 60%);\n  }\n\n  /* Add a soft pinkish gradient overlay behind the canvas for extra depth */\n  .home-spa-canvas-container::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    pointer-events: none;\n    background: radial-gradient(60% 60% at 50% 40%, rgba(255, 192, 203, 0.42), rgba(245, 182, 204, 0.28), rgba(255, 255, 255, 0));\n    /* Subtle vignette for focus (stronger) */\n    box-shadow: inset 0 0 180px rgba(255, 192, 203, 0.20);\n  }\n  \n  .home-spa-canvas-container {\n    @apply absolute inset-0 -z-10; /* Position behind content */\n    /* Ensure the preloaded gradient shows while canvas is not yet painted */\n    background: radial-gradient(60% 60% at 50% 40%, rgba(255, 192, 203, 0.42), rgba(245, 182, 204, 0.28), rgba(255, 255, 255, 0));\n    animation: home-spa-fade-in 600ms ease-out 0ms both;\n  }\n  \n  .home-spa-content {\n    @apply relative z-10 min-h-screen flex items-center justify-center p-4;\n    /* Fade-in animation for the SPA content */\n    animation: home-spa-fade-in 700ms ease-out 60ms both;\n  }\n\n  @keyframes home-spa-fade-in {\n    0% {\n      opacity: 0;\n      transform: translateY(8px) scale(0.995);\n      filter: saturate(0.95) blur(0.4px);\n    }\n    60% {\n      opacity: 1;\n      transform: translateY(0) scale(1.0);\n      filter: saturate(1) blur(0);\n    }\n    100% {\n      opacity: 1;\n      transform: translateY(0) scale(1.0);\n      filter: none;\n    }\n  }\n  \n  .home-spa-inner-content {\n    @apply text-center max-w-2xl mx-auto px-4;\n    color: #a11d3f; /* wine-leaning base tint */\n  }\n  \n  .home-spa-title {\n    @apply text-4xl md:text-6xl font-bold text-center mb-4 text-slate-900 dark:text-white;\n    font-family: var(--aw-font-heading, 'Dancing Script'), cursive;\n    text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    line-height: 1.2;\n    margin-bottom: 1rem;\n  }\n  \n  .home-spa-subtitle {\n    @apply text-xl md:text-2xl mb-8 max-w-lg mx-auto italic;\n    color: #be123c; /* rose-700 */\n    font-family: var(--aw-font-heading, 'Dancing Script'), cursive;\n    font-weight: 500;\n    text-shadow:\n      0 2px 6px rgba(159, 18, 57, 0.25),\n      0 8px 24px rgba(159, 18, 57, 0.18),\n      0 1px 0 rgba(255,255,255,0.6);\n  }\n  \n  .home-spa-button-container {\n    @apply flex flex-wrap justify-center gap-6 mt-8 font-sans;\n    position: relative;\n    z-index: 10;\n  }\n  \n  .home-spa-btn {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 1.5rem;\n    font-weight: 500;\n    text-align: center;\n    font-size: 1.125rem;\n    line-height: 1.25rem;\n    transition: all 0.2s ease-in-out;\n    padding: 0.75rem 2rem;\n    cursor: pointer;\n    text-decoration: none;\n    white-space: nowrap;\n    min-width: 180px;\n    font-family: var(--aw-font-sans, 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif);\n  }\n  \n  /* Primary button style */\n  .home-spa-btn.primary {\n    background-color: var(--aw-color-primary, #E8B4B8);\n    border: none;\n    color: var(--aw-color-text-heading, #404040);\n  }\n  \n  .home-spa-btn.primary:hover:not(:disabled) {\n    background-color: var(--aw-color-secondary, #D48A8F);\n    border-color: var(--aw-color-secondary, #D48A8F);\n    transform: translateY(-1px);\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n  }\n  \n  /* Secondary button style */\n  .home-spa-btn.secondary {\n    background-color: var(--aw-color-bg-page, #FFFDFA);\n    border: none;\n    color: var(--aw-color-text-default, #595959);\n    box-shadow: 0 0 0 1px var(--aw-color-primary, #E8B4B8);\n  }\n  \n  .home-spa-btn.secondary:hover:not(:disabled) {\n    background-color: var(--aw-color-accent, #FFDADD);\n    box-shadow: 0 0 0 1px var(--aw-color-secondary, #D48A8F);\n    transform: translateY(-1px);\n  }\n  \n  /* Focus state */\n  .home-spa-btn:focus {\n    outline: none;\n    box-shadow: 0 0 0 3px var(--aw-color-accent, #FFDADD);\n    border-color: var(--aw-color-secondary, #D48A8F);\n  }\n  \n  /* Active state */\n  .home-spa-btn:active:not(:disabled) {\n    transform: translateY(0);\n  }\n  \n  /* Responsive adjustments */\n  @media (max-width: 768px) {\n    .home-spa-title {\n      @apply text-4xl;\n    }\n    \n    .home-spa-subtitle {\n      @apply text-xl;\n    }\n  }\n</style>\n"],"file":"assets/HomeSPA.Cavp2Uhc.js"}